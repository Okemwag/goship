-- Create "answers" table
CREATE TABLE "answers" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "content" text NOT NULL, "is_quizz" boolean NOT NULL DEFAULT false, "encrypted" boolean NOT NULL DEFAULT false, "published" boolean NOT NULL DEFAULT false, "published_at" timestamptz NULL, "profile_id" bigint NOT NULL, "question_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "answer_profile_id_question_id" to table: "answers"
CREATE UNIQUE INDEX "answer_profile_id_question_id" ON "answers" ("profile_id", "question_id");
-- Create "committed_relationship_requests" table
CREATE TABLE "committed_relationship_requests" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "accepted_at" timestamptz NULL, "inviter_id" bigint NOT NULL, "invitee_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create "email_subscription_subscriptions" table
CREATE TABLE "email_subscription_subscriptions" ("email_subscription_id" bigint NOT NULL, "email_subscription_type_id" bigint NOT NULL, PRIMARY KEY ("email_subscription_id", "email_subscription_type_id"));
-- Create "email_subscription_types" table
CREATE TABLE "email_subscription_types" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "name" character varying NOT NULL, "active" boolean NOT NULL DEFAULT true, PRIMARY KEY ("id"));
-- Create index "email_subscription_types_name_key" to table: "email_subscription_types"
CREATE UNIQUE INDEX "email_subscription_types_name_key" ON "email_subscription_types" ("name");
-- Create "email_subscriptions" table
CREATE TABLE "email_subscriptions" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "email" character varying NOT NULL, "verified" boolean NOT NULL DEFAULT false, "confirmation_code" character varying NOT NULL, "latitude" double precision NULL, "longitude" double precision NULL, PRIMARY KEY ("id"));
-- Create index "email_subscriptions_confirmation_code_key" to table: "email_subscriptions"
CREATE UNIQUE INDEX "email_subscriptions_confirmation_code_key" ON "email_subscriptions" ("confirmation_code");
-- Create index "email_subscriptions_email_key" to table: "email_subscriptions"
CREATE UNIQUE INDEX "email_subscriptions_email_key" ON "email_subscriptions" ("email");
-- Create "emojis" table
CREATE TABLE "emojis" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "unified_code" character varying NOT NULL, "shortcode" character varying NOT NULL, PRIMARY KEY ("id"));
-- Create "fcm_subscriptions" table
CREATE TABLE "fcm_subscriptions" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "token" character varying NOT NULL, "profile_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "fcmsubscriptions_token_profile_id" to table: "fcm_subscriptions"
CREATE UNIQUE INDEX "fcmsubscriptions_token_profile_id" ON "fcm_subscriptions" ("token", "profile_id");
-- Create "file_storages" table
CREATE TABLE "file_storages" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "bucket_name" character varying NOT NULL, "object_key" character varying NOT NULL, "original_file_name" character varying NULL, "file_size" bigint NULL, "content_type" character varying NULL, "file_hash" character varying NULL, PRIMARY KEY ("id"));
-- Create index "filestorage_bucket_name_object_key" to table: "file_storages"
CREATE UNIQUE INDEX "filestorage_bucket_name_object_key" ON "file_storages" ("bucket_name", "object_key");
-- Create "image_sizes" table
CREATE TABLE "image_sizes" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "size" character varying NOT NULL, "width" bigint NOT NULL, "height" bigint NOT NULL, "image_sizes" bigint NULL, "image_size_file" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create "images" table
CREATE TABLE "images" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "type" character varying NOT NULL, "profile_photos" bigint NULL, PRIMARY KEY ("id"));
-- Create "invitations" table
CREATE TABLE "invitations" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "invitee_name" character varying NOT NULL, "confirmation_code" character varying NOT NULL, "profile_invitations" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "invitations_confirmation_code_key" to table: "invitations"
CREATE UNIQUE INDEX "invitations_confirmation_code_key" ON "invitations" ("confirmation_code");
-- Create "last_seen_onlines" table
CREATE TABLE "last_seen_onlines" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "seen_at" timestamptz NOT NULL, "user_last_seen_at" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create "monthly_subscription_benefactors" table
CREATE TABLE "monthly_subscription_benefactors" ("monthly_subscription_id" bigint NOT NULL, "profile_id" bigint NOT NULL, PRIMARY KEY ("monthly_subscription_id", "profile_id"));
-- Create "monthly_subscriptions" table
CREATE TABLE "monthly_subscriptions" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "product" character varying NOT NULL DEFAULT 'free', "is_active" boolean NOT NULL DEFAULT false, "paid" boolean NOT NULL DEFAULT false, "is_trial" boolean NOT NULL DEFAULT true, "started_at" timestamptz NULL, "expired_on" timestamptz NULL, "cancelled_at" timestamptz NULL, "paying_profile_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "monthlysubscription_paying_profile_id_is_active" to table: "monthly_subscriptions"
CREATE UNIQUE INDEX "monthlysubscription_paying_profile_id_is_active" ON "monthly_subscriptions" ("paying_profile_id", "is_active");
-- Create "notification_permissions" table
CREATE TABLE "notification_permissions" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "permission" character varying NOT NULL, "platform" character varying NOT NULL, "token" character varying NOT NULL, "profile_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "notificationpermission_profile_id_permission_platform" to table: "notification_permissions"
CREATE UNIQUE INDEX "notificationpermission_profile_id_permission_platform" ON "notification_permissions" ("profile_id", "permission", "platform");
-- Create "notification_times" table
CREATE TABLE "notification_times" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "type" character varying NOT NULL, "send_minute" bigint NOT NULL, "profile_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "notificationtime_profile_id_type" to table: "notification_times"
CREATE UNIQUE INDEX "notificationtime_profile_id_type" ON "notification_times" ("profile_id", "type");
-- Create "notifications" table
CREATE TABLE "notifications" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "type" character varying NOT NULL, "title" character varying NOT NULL DEFAULT '', "text" character varying NOT NULL, "link" character varying NULL, "read" boolean NOT NULL DEFAULT false, "read_at" timestamptz NULL, "profile_id_who_caused_notification" bigint NULL, "resource_id_tied_to_notif" bigint NULL, "read_in_notifications_center" boolean NULL, "profile_notifications" bigint NULL, PRIMARY KEY ("id"));
-- Create "password_tokens" table
CREATE TABLE "password_tokens" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "hash" character varying NOT NULL, "created_at" timestamptz NOT NULL, "password_token_user" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create "phone_verification_codes" table
CREATE TABLE "phone_verification_codes" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "code" character varying NOT NULL, "profile_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "phoneverificationcode_code_profile_id" to table: "phone_verification_codes"
CREATE UNIQUE INDEX "phoneverificationcode_code_profile_id" ON "phone_verification_codes" ("code", "profile_id");
-- Create "private_messages" table
CREATE TABLE "private_messages" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "content" character varying NOT NULL, "published" boolean NOT NULL DEFAULT false, "published_at" timestamptz NULL, "private_message_recipient" bigint NOT NULL, "profile_private_messages" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create "profile_disliked_profiles" table
CREATE TABLE "profile_disliked_profiles" ("profile_id" bigint NOT NULL, "disliked_by_profile_id" bigint NOT NULL, PRIMARY KEY ("profile_id", "disliked_by_profile_id"));
-- Create "profile_friends" table
CREATE TABLE "profile_friends" ("profile_id" bigint NOT NULL, "friend_id" bigint NOT NULL, PRIMARY KEY ("profile_id", "friend_id"));
-- Create "profile_liked_profiles" table
CREATE TABLE "profile_liked_profiles" ("profile_id" bigint NOT NULL, "liked_by_profile_id" bigint NOT NULL, PRIMARY KEY ("profile_id", "liked_by_profile_id"));
-- Create "profile_matches" table
CREATE TABLE "profile_matches" ("profile_id" bigint NOT NULL, "match_id" bigint NOT NULL, PRIMARY KEY ("profile_id", "match_id"));
-- Create "profiles" table
CREATE TABLE "profiles" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "bio" character varying NULL, "birthdate" timestamptz NULL, "age" bigint NULL, "min_interested_age" smallint NULL, "max_interested_age" smallint NULL, "latitude" double precision NULL, "longitude" double precision NULL, "radius" bigint NULL, "num_matches" bigint NULL, "fully_onboarded" boolean NOT NULL DEFAULT false, "phone_number_e164" character varying NULL, "country_code" character varying NULL, "phone_verified" boolean NULL, "stripe_id" character varying NULL, "profile_profile_image" bigint NULL, "user_profile" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "profiles_stripe_id_key" to table: "profiles"
CREATE UNIQUE INDEX "profiles_stripe_id_key" ON "profiles" ("stripe_id");
-- Create index "profiles_user_profile_key" to table: "profiles"
CREATE UNIQUE INDEX "profiles_user_profile_key" ON "profiles" ("user_profile");
-- Create "pwa_push_subscriptions" table
CREATE TABLE "pwa_push_subscriptions" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "endpoint" character varying NOT NULL, "p256dh" character varying NOT NULL, "auth" character varying NOT NULL, "profile_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "pwapushsubscription_profile_id_endpoint" to table: "pwa_push_subscriptions"
CREATE UNIQUE INDEX "pwapushsubscription_profile_id_endpoint" ON "pwa_push_subscriptions" ("profile_id", "endpoint");
-- Create "question_seen_events" table
CREATE TABLE "question_seen_events" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "profile_id" bigint NOT NULL, "question_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "questionseenevent_profile_id_question_id" to table: "question_seen_events"
CREATE UNIQUE INDEX "questionseenevent_profile_id_question_id" ON "question_seen_events" ("profile_id", "question_id");
-- Create "questions" table
CREATE TABLE "questions" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "friendship" boolean NOT NULL DEFAULT true, "content" character varying NOT NULL, "description" character varying NULL, "dating" boolean NOT NULL DEFAULT true, "committed" boolean NOT NULL DEFAULT true, "shareable_id" uuid NOT NULL, "upvotes" bigint NULL DEFAULT 0, "downvotes" bigint NULL DEFAULT 0, "thenlper_gte_small_384" vector(384) NULL, "is_quiz" boolean NOT NULL DEFAULT false, PRIMARY KEY ("id"));
-- Create index "question_thenlper_gte_small_384" to table: "questions"
CREATE INDEX "question_thenlper_gte_small_384" ON "questions" USING hnsw ("thenlper_gte_small_384" vector_cosine_ops);
-- Create index "questions_content_key" to table: "questions"
CREATE UNIQUE INDEX "questions_content_key" ON "questions" ("content");
-- Create index "questions_shareable_id_key" to table: "questions"
CREATE UNIQUE INDEX "questions_shareable_id_key" ON "questions" ("shareable_id");
-- Create "seen_answer_events" table
CREATE TABLE "seen_answer_events" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "answer_id" bigint NOT NULL, "seen_by_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "seenanswerevent_answer_id_seen_by_id" to table: "seen_answer_events"
CREATE UNIQUE INDEX "seenanswerevent_answer_id_seen_by_id" ON "seen_answer_events" ("answer_id", "seen_by_id");
-- Create "seen_private_message_events" table
CREATE TABLE "seen_private_message_events" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "private_message_id" bigint NOT NULL, "seen_by_id" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create index "seenprivatemessageevent_private_message_id_seen_by_id" to table: "seen_private_message_events"
CREATE UNIQUE INDEX "seenprivatemessageevent_private_message_id_seen_by_id" ON "seen_private_message_events" ("private_message_id", "seen_by_id");
-- Create "sent_emails" table
CREATE TABLE "sent_emails" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "type" character varying NOT NULL, "profile_sent_emails" bigint NOT NULL, PRIMARY KEY ("id"));
-- Create "users" table
CREATE TABLE "users" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "name" character varying NOT NULL, "email" character varying NOT NULL, "password" character varying NOT NULL, "verified" boolean NOT NULL DEFAULT false, "last_online" timestamptz NULL, PRIMARY KEY ("id"));
-- Create index "users_email_key" to table: "users"
CREATE UNIQUE INDEX "users_email_key" ON "users" ("email");
-- Modify "answers" table
ALTER TABLE "answers" ADD CONSTRAINT "answers_profiles_answers" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "answers_questions_answers" FOREIGN KEY ("question_id") REFERENCES "questions" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- Modify "committed_relationship_requests" table
ALTER TABLE "committed_relationship_requests" ADD CONSTRAINT "committed_relationship_requests_profiles_committed_extended_req" FOREIGN KEY ("inviter_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "committed_relationship_requests_profiles_committed_received_req" FOREIGN KEY ("invitee_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "email_subscription_subscriptions" table
ALTER TABLE "email_subscription_subscriptions" ADD CONSTRAINT "email_subscription_subscriptions_email_subscription_id" FOREIGN KEY ("email_subscription_id") REFERENCES "email_subscriptions" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "email_subscription_subscriptions_email_subscription_type_id" FOREIGN KEY ("email_subscription_type_id") REFERENCES "email_subscription_types" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "fcm_subscriptions" table
ALTER TABLE "fcm_subscriptions" ADD CONSTRAINT "fcm_subscriptions_profiles_fcm_push_subscriptions" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "image_sizes" table
ALTER TABLE "image_sizes" ADD CONSTRAINT "image_sizes_file_storages_file" FOREIGN KEY ("image_size_file") REFERENCES "file_storages" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "image_sizes_images_sizes" FOREIGN KEY ("image_sizes") REFERENCES "images" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "images" table
ALTER TABLE "images" ADD CONSTRAINT "images_profiles_photos" FOREIGN KEY ("profile_photos") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "invitations" table
ALTER TABLE "invitations" ADD CONSTRAINT "invitations_profiles_invitations" FOREIGN KEY ("profile_invitations") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "last_seen_onlines" table
ALTER TABLE "last_seen_onlines" ADD CONSTRAINT "last_seen_onlines_users_last_seen_at" FOREIGN KEY ("user_last_seen_at") REFERENCES "users" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "monthly_subscription_benefactors" table
ALTER TABLE "monthly_subscription_benefactors" ADD CONSTRAINT "monthly_subscription_benefactors_monthly_subscription_id" FOREIGN KEY ("monthly_subscription_id") REFERENCES "monthly_subscriptions" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "monthly_subscription_benefactors_profile_id" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "monthly_subscriptions" table
ALTER TABLE "monthly_subscriptions" ADD CONSTRAINT "monthly_subscriptions_profiles_payer" FOREIGN KEY ("paying_profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- Modify "notification_permissions" table
ALTER TABLE "notification_permissions" ADD CONSTRAINT "notification_permissions_profiles_notification_permissions" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "notification_times" table
ALTER TABLE "notification_times" ADD CONSTRAINT "notification_times_profiles_notification_times" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "notifications" table
ALTER TABLE "notifications" ADD CONSTRAINT "notifications_profiles_notifications" FOREIGN KEY ("profile_notifications") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "password_tokens" table
ALTER TABLE "password_tokens" ADD CONSTRAINT "password_tokens_users_user" FOREIGN KEY ("password_token_user") REFERENCES "users" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- Modify "phone_verification_codes" table
ALTER TABLE "phone_verification_codes" ADD CONSTRAINT "phone_verification_codes_profiles_phone_verification_code" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "private_messages" table
ALTER TABLE "private_messages" ADD CONSTRAINT "private_messages_profiles_private_messages" FOREIGN KEY ("profile_private_messages") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "private_messages_profiles_recipient" FOREIGN KEY ("private_message_recipient") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- Modify "profile_disliked_profiles" table
ALTER TABLE "profile_disliked_profiles" ADD CONSTRAINT "profile_disliked_profiles_disliked_by_profile_id" FOREIGN KEY ("disliked_by_profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "profile_disliked_profiles_profile_id" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "profile_friends" table
ALTER TABLE "profile_friends" ADD CONSTRAINT "profile_friends_friend_id" FOREIGN KEY ("friend_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "profile_friends_profile_id" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "profile_liked_profiles" table
ALTER TABLE "profile_liked_profiles" ADD CONSTRAINT "profile_liked_profiles_liked_by_profile_id" FOREIGN KEY ("liked_by_profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "profile_liked_profiles_profile_id" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "profile_matches" table
ALTER TABLE "profile_matches" ADD CONSTRAINT "profile_matches_match_id" FOREIGN KEY ("match_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "profile_matches_profile_id" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "profiles" table
ALTER TABLE "profiles" ADD CONSTRAINT "profiles_images_profile_image" FOREIGN KEY ("profile_profile_image") REFERENCES "images" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "profiles_users_profile" FOREIGN KEY ("user_profile") REFERENCES "users" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "pwa_push_subscriptions" table
ALTER TABLE "pwa_push_subscriptions" ADD CONSTRAINT "pwa_push_subscriptions_profiles_pwa_push_subscriptions" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "question_seen_events" table
ALTER TABLE "question_seen_events" ADD CONSTRAINT "question_seen_events_profiles_question_seen_events" FOREIGN KEY ("profile_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "question_seen_events_questions_seen_events" FOREIGN KEY ("question_id") REFERENCES "questions" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "seen_answer_events" table
ALTER TABLE "seen_answer_events" ADD CONSTRAINT "seen_answer_events_answers_seen_events" FOREIGN KEY ("answer_id") REFERENCES "answers" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "seen_answer_events_profiles_seen_answers" FOREIGN KEY ("seen_by_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "seen_private_message_events" table
ALTER TABLE "seen_private_message_events" ADD CONSTRAINT "seen_private_message_events_private_messages_seen_events" FOREIGN KEY ("private_message_id") REFERENCES "private_messages" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, ADD CONSTRAINT "seen_private_message_events_profiles_seen_private_messages" FOREIGN KEY ("seen_by_id") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- Modify "sent_emails" table
ALTER TABLE "sent_emails" ADD CONSTRAINT "sent_emails_profiles_sent_emails" FOREIGN KEY ("profile_sent_emails") REFERENCES "profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
