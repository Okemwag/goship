// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EmailSubscriptionsColumns holds the columns for the "email_subscriptions" table.
	EmailSubscriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "verified", Type: field.TypeBool, Default: false},
		{Name: "confirmation_code", Type: field.TypeString, Unique: true},
		{Name: "latitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "longitude", Type: field.TypeFloat64, Nullable: true},
	}
	// EmailSubscriptionsTable holds the schema information for the "email_subscriptions" table.
	EmailSubscriptionsTable = &schema.Table{
		Name:       "email_subscriptions",
		Columns:    EmailSubscriptionsColumns,
		PrimaryKey: []*schema.Column{EmailSubscriptionsColumns[0]},
	}
	// EmailSubscriptionTypesColumns holds the columns for the "email_subscription_types" table.
	EmailSubscriptionTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeEnum, Enums: []string{"email_newsletter", "launch_announcement"}},
		{Name: "active", Type: field.TypeBool, Default: true},
	}
	// EmailSubscriptionTypesTable holds the schema information for the "email_subscription_types" table.
	EmailSubscriptionTypesTable = &schema.Table{
		Name:       "email_subscription_types",
		Columns:    EmailSubscriptionTypesColumns,
		PrimaryKey: []*schema.Column{EmailSubscriptionTypesColumns[0]},
	}
	// EmojisColumns holds the columns for the "emojis" table.
	EmojisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "unified_code", Type: field.TypeString},
		{Name: "shortcode", Type: field.TypeString},
	}
	// EmojisTable holds the schema information for the "emojis" table.
	EmojisTable = &schema.Table{
		Name:       "emojis",
		Columns:    EmojisColumns,
		PrimaryKey: []*schema.Column{EmojisColumns[0]},
	}
	// FcmSubscriptionsColumns holds the columns for the "fcm_subscriptions" table.
	FcmSubscriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "token", Type: field.TypeString},
		{Name: "profile_id", Type: field.TypeInt},
	}
	// FcmSubscriptionsTable holds the schema information for the "fcm_subscriptions" table.
	FcmSubscriptionsTable = &schema.Table{
		Name:       "fcm_subscriptions",
		Columns:    FcmSubscriptionsColumns,
		PrimaryKey: []*schema.Column{FcmSubscriptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "fcm_subscriptions_profiles_fcm_push_subscriptions",
				Columns:    []*schema.Column{FcmSubscriptionsColumns[4]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "fcmsubscriptions_token_profile_id",
				Unique:  true,
				Columns: []*schema.Column{FcmSubscriptionsColumns[3], FcmSubscriptionsColumns[4]},
			},
		},
	}
	// FileStoragesColumns holds the columns for the "file_storages" table.
	FileStoragesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "bucket_name", Type: field.TypeString},
		{Name: "object_key", Type: field.TypeString},
		{Name: "original_file_name", Type: field.TypeString, Nullable: true},
		{Name: "file_size", Type: field.TypeInt64, Nullable: true},
		{Name: "content_type", Type: field.TypeString, Nullable: true},
		{Name: "file_hash", Type: field.TypeString, Nullable: true},
	}
	// FileStoragesTable holds the schema information for the "file_storages" table.
	FileStoragesTable = &schema.Table{
		Name:       "file_storages",
		Columns:    FileStoragesColumns,
		PrimaryKey: []*schema.Column{FileStoragesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "filestorage_bucket_name_object_key",
				Unique:  true,
				Columns: []*schema.Column{FileStoragesColumns[3], FileStoragesColumns[4]},
			},
		},
	}
	// ImagesColumns holds the columns for the "images" table.
	ImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"profile_photo", "profile_gallery"}},
		{Name: "profile_photos", Type: field.TypeInt, Nullable: true},
	}
	// ImagesTable holds the schema information for the "images" table.
	ImagesTable = &schema.Table{
		Name:       "images",
		Columns:    ImagesColumns,
		PrimaryKey: []*schema.Column{ImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "images_profiles_photos",
				Columns:    []*schema.Column{ImagesColumns[4]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ImageSizesColumns holds the columns for the "image_sizes" table.
	ImageSizesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "size", Type: field.TypeEnum, Enums: []string{"thumbnail", "preview", "full"}},
		{Name: "width", Type: field.TypeInt},
		{Name: "height", Type: field.TypeInt},
		{Name: "image_sizes", Type: field.TypeInt, Nullable: true},
		{Name: "image_size_file", Type: field.TypeInt},
	}
	// ImageSizesTable holds the schema information for the "image_sizes" table.
	ImageSizesTable = &schema.Table{
		Name:       "image_sizes",
		Columns:    ImageSizesColumns,
		PrimaryKey: []*schema.Column{ImageSizesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "image_sizes_images_sizes",
				Columns:    []*schema.Column{ImageSizesColumns[6]},
				RefColumns: []*schema.Column{ImagesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "image_sizes_file_storages_file",
				Columns:    []*schema.Column{ImageSizesColumns[7]},
				RefColumns: []*schema.Column{FileStoragesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// InvitationsColumns holds the columns for the "invitations" table.
	InvitationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "invitee_name", Type: field.TypeString},
		{Name: "confirmation_code", Type: field.TypeString, Unique: true},
		{Name: "profile_invitations", Type: field.TypeInt},
	}
	// InvitationsTable holds the schema information for the "invitations" table.
	InvitationsTable = &schema.Table{
		Name:       "invitations",
		Columns:    InvitationsColumns,
		PrimaryKey: []*schema.Column{InvitationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "invitations_profiles_invitations",
				Columns:    []*schema.Column{InvitationsColumns[5]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// LastSeenOnlinesColumns holds the columns for the "last_seen_onlines" table.
	LastSeenOnlinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "seen_at", Type: field.TypeTime},
		{Name: "user_last_seen_at", Type: field.TypeInt},
	}
	// LastSeenOnlinesTable holds the schema information for the "last_seen_onlines" table.
	LastSeenOnlinesTable = &schema.Table{
		Name:       "last_seen_onlines",
		Columns:    LastSeenOnlinesColumns,
		PrimaryKey: []*schema.Column{LastSeenOnlinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "last_seen_onlines_users_last_seen_at",
				Columns:    []*schema.Column{LastSeenOnlinesColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MonthlySubscriptionsColumns holds the columns for the "monthly_subscriptions" table.
	MonthlySubscriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "product", Type: field.TypeEnum, Enums: []string{"free", "pro"}, Default: "free"},
		{Name: "is_active", Type: field.TypeBool, Default: false},
		{Name: "paid", Type: field.TypeBool, Default: false},
		{Name: "is_trial", Type: field.TypeBool, Default: true},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "expired_on", Type: field.TypeTime, Nullable: true},
		{Name: "cancelled_at", Type: field.TypeTime, Nullable: true},
		{Name: "paying_profile_id", Type: field.TypeInt},
	}
	// MonthlySubscriptionsTable holds the schema information for the "monthly_subscriptions" table.
	MonthlySubscriptionsTable = &schema.Table{
		Name:       "monthly_subscriptions",
		Columns:    MonthlySubscriptionsColumns,
		PrimaryKey: []*schema.Column{MonthlySubscriptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "monthly_subscriptions_profiles_payer",
				Columns:    []*schema.Column{MonthlySubscriptionsColumns[10]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "monthlysubscription_paying_profile_id_is_active",
				Unique:  true,
				Columns: []*schema.Column{MonthlySubscriptionsColumns[10], MonthlySubscriptionsColumns[4]},
			},
		},
	}
	// NotificationsColumns holds the columns for the "notifications" table.
	NotificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"new_private_message", "mutual_question_answered", "connection_engaged_with_question", "increment_num_unseen_msg", "decrement_num_unseen_msg", "update_num_notifs", "connection_request_accepted", "platform_update", "connection_reacted_to_answer", "committed_relationship_request", "breakup", "contact_request", "new_homefeed_qa_object", "payment_failed", "daily_conversation_reminder"}},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "text", Type: field.TypeString},
		{Name: "link", Type: field.TypeString, Nullable: true},
		{Name: "read", Type: field.TypeBool, Default: false},
		{Name: "read_at", Type: field.TypeTime, Nullable: true},
		{Name: "profile_id_who_caused_notification", Type: field.TypeInt, Nullable: true},
		{Name: "resource_id_tied_to_notif", Type: field.TypeInt, Nullable: true},
		{Name: "read_in_notifications_center", Type: field.TypeBool, Nullable: true},
		{Name: "profile_notifications", Type: field.TypeInt, Nullable: true},
	}
	// NotificationsTable holds the schema information for the "notifications" table.
	NotificationsTable = &schema.Table{
		Name:       "notifications",
		Columns:    NotificationsColumns,
		PrimaryKey: []*schema.Column{NotificationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notifications_profiles_notifications",
				Columns:    []*schema.Column{NotificationsColumns[12]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// NotificationPermissionsColumns holds the columns for the "notification_permissions" table.
	NotificationPermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "permission", Type: field.TypeEnum, Enums: []string{"daily_reminder", "partner_activity"}},
		{Name: "platform", Type: field.TypeEnum, Enums: []string{"push", "fcm_push", "email", "sms"}},
		{Name: "token", Type: field.TypeString},
		{Name: "profile_id", Type: field.TypeInt},
	}
	// NotificationPermissionsTable holds the schema information for the "notification_permissions" table.
	NotificationPermissionsTable = &schema.Table{
		Name:       "notification_permissions",
		Columns:    NotificationPermissionsColumns,
		PrimaryKey: []*schema.Column{NotificationPermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notification_permissions_profiles_notification_permissions",
				Columns:    []*schema.Column{NotificationPermissionsColumns[6]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "notificationpermission_profile_id_permission_platform",
				Unique:  true,
				Columns: []*schema.Column{NotificationPermissionsColumns[6], NotificationPermissionsColumns[3], NotificationPermissionsColumns[4]},
			},
		},
	}
	// NotificationTimesColumns holds the columns for the "notification_times" table.
	NotificationTimesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"new_private_message", "mutual_question_answered", "connection_engaged_with_question", "increment_num_unseen_msg", "decrement_num_unseen_msg", "update_num_notifs", "connection_request_accepted", "platform_update", "connection_reacted_to_answer", "committed_relationship_request", "breakup", "contact_request", "new_homefeed_qa_object", "payment_failed", "daily_conversation_reminder"}},
		{Name: "send_minute", Type: field.TypeInt},
		{Name: "profile_id", Type: field.TypeInt},
	}
	// NotificationTimesTable holds the schema information for the "notification_times" table.
	NotificationTimesTable = &schema.Table{
		Name:       "notification_times",
		Columns:    NotificationTimesColumns,
		PrimaryKey: []*schema.Column{NotificationTimesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notification_times_profiles_notification_times",
				Columns:    []*schema.Column{NotificationTimesColumns[5]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "notificationtime_profile_id_type",
				Unique:  true,
				Columns: []*schema.Column{NotificationTimesColumns[5], NotificationTimesColumns[3]},
			},
		},
	}
	// PasswordTokensColumns holds the columns for the "password_tokens" table.
	PasswordTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "hash", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "password_token_user", Type: field.TypeInt},
	}
	// PasswordTokensTable holds the schema information for the "password_tokens" table.
	PasswordTokensTable = &schema.Table{
		Name:       "password_tokens",
		Columns:    PasswordTokensColumns,
		PrimaryKey: []*schema.Column{PasswordTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "password_tokens_users_user",
				Columns:    []*schema.Column{PasswordTokensColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PhoneVerificationCodesColumns holds the columns for the "phone_verification_codes" table.
	PhoneVerificationCodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "code", Type: field.TypeString},
		{Name: "profile_id", Type: field.TypeInt},
	}
	// PhoneVerificationCodesTable holds the schema information for the "phone_verification_codes" table.
	PhoneVerificationCodesTable = &schema.Table{
		Name:       "phone_verification_codes",
		Columns:    PhoneVerificationCodesColumns,
		PrimaryKey: []*schema.Column{PhoneVerificationCodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "phone_verification_codes_profiles_phone_verification_code",
				Columns:    []*schema.Column{PhoneVerificationCodesColumns[4]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "phoneverificationcode_code_profile_id",
				Unique:  true,
				Columns: []*schema.Column{PhoneVerificationCodesColumns[3], PhoneVerificationCodesColumns[4]},
			},
		},
	}
	// ProfilesColumns holds the columns for the "profiles" table.
	ProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "bio", Type: field.TypeString, Nullable: true},
		{Name: "birthdate", Type: field.TypeTime, Nullable: true},
		{Name: "age", Type: field.TypeInt, Nullable: true},
		{Name: "fully_onboarded", Type: field.TypeBool, Default: false},
		{Name: "phone_number_e164", Type: field.TypeString, Nullable: true},
		{Name: "country_code", Type: field.TypeString, Nullable: true},
		{Name: "phone_verified", Type: field.TypeBool, Nullable: true},
		{Name: "stripe_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "profile_profile_image", Type: field.TypeInt, Nullable: true},
		{Name: "user_profile", Type: field.TypeInt, Unique: true},
	}
	// ProfilesTable holds the schema information for the "profiles" table.
	ProfilesTable = &schema.Table{
		Name:       "profiles",
		Columns:    ProfilesColumns,
		PrimaryKey: []*schema.Column{ProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "profiles_images_profile_image",
				Columns:    []*schema.Column{ProfilesColumns[11]},
				RefColumns: []*schema.Column{ImagesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "profiles_users_profile",
				Columns:    []*schema.Column{ProfilesColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PwaPushSubscriptionsColumns holds the columns for the "pwa_push_subscriptions" table.
	PwaPushSubscriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "endpoint", Type: field.TypeString},
		{Name: "p256dh", Type: field.TypeString},
		{Name: "auth", Type: field.TypeString},
		{Name: "profile_id", Type: field.TypeInt},
	}
	// PwaPushSubscriptionsTable holds the schema information for the "pwa_push_subscriptions" table.
	PwaPushSubscriptionsTable = &schema.Table{
		Name:       "pwa_push_subscriptions",
		Columns:    PwaPushSubscriptionsColumns,
		PrimaryKey: []*schema.Column{PwaPushSubscriptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "pwa_push_subscriptions_profiles_pwa_push_subscriptions",
				Columns:    []*schema.Column{PwaPushSubscriptionsColumns[6]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "pwapushsubscription_profile_id_endpoint",
				Unique:  true,
				Columns: []*schema.Column{PwaPushSubscriptionsColumns[6], PwaPushSubscriptionsColumns[3]},
			},
		},
	}
	// SentEmailsColumns holds the columns for the "sent_emails" table.
	SentEmailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"daily_reminder", "partner_activity"}},
		{Name: "profile_sent_emails", Type: field.TypeInt},
	}
	// SentEmailsTable holds the schema information for the "sent_emails" table.
	SentEmailsTable = &schema.Table{
		Name:       "sent_emails",
		Columns:    SentEmailsColumns,
		PrimaryKey: []*schema.Column{SentEmailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sent_emails_profiles_sent_emails",
				Columns:    []*schema.Column{SentEmailsColumns[4]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "verified", Type: field.TypeBool, Default: false},
		{Name: "last_online", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// EmailSubscriptionSubscriptionsColumns holds the columns for the "email_subscription_subscriptions" table.
	EmailSubscriptionSubscriptionsColumns = []*schema.Column{
		{Name: "email_subscription_id", Type: field.TypeInt},
		{Name: "email_subscription_type_id", Type: field.TypeInt},
	}
	// EmailSubscriptionSubscriptionsTable holds the schema information for the "email_subscription_subscriptions" table.
	EmailSubscriptionSubscriptionsTable = &schema.Table{
		Name:       "email_subscription_subscriptions",
		Columns:    EmailSubscriptionSubscriptionsColumns,
		PrimaryKey: []*schema.Column{EmailSubscriptionSubscriptionsColumns[0], EmailSubscriptionSubscriptionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "email_subscription_subscriptions_email_subscription_id",
				Columns:    []*schema.Column{EmailSubscriptionSubscriptionsColumns[0]},
				RefColumns: []*schema.Column{EmailSubscriptionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "email_subscription_subscriptions_email_subscription_type_id",
				Columns:    []*schema.Column{EmailSubscriptionSubscriptionsColumns[1]},
				RefColumns: []*schema.Column{EmailSubscriptionTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MonthlySubscriptionBenefactorsColumns holds the columns for the "monthly_subscription_benefactors" table.
	MonthlySubscriptionBenefactorsColumns = []*schema.Column{
		{Name: "monthly_subscription_id", Type: field.TypeInt},
		{Name: "profile_id", Type: field.TypeInt},
	}
	// MonthlySubscriptionBenefactorsTable holds the schema information for the "monthly_subscription_benefactors" table.
	MonthlySubscriptionBenefactorsTable = &schema.Table{
		Name:       "monthly_subscription_benefactors",
		Columns:    MonthlySubscriptionBenefactorsColumns,
		PrimaryKey: []*schema.Column{MonthlySubscriptionBenefactorsColumns[0], MonthlySubscriptionBenefactorsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "monthly_subscription_benefactors_monthly_subscription_id",
				Columns:    []*schema.Column{MonthlySubscriptionBenefactorsColumns[0]},
				RefColumns: []*schema.Column{MonthlySubscriptionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "monthly_subscription_benefactors_profile_id",
				Columns:    []*schema.Column{MonthlySubscriptionBenefactorsColumns[1]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProfileFriendsColumns holds the columns for the "profile_friends" table.
	ProfileFriendsColumns = []*schema.Column{
		{Name: "profile_id", Type: field.TypeInt},
		{Name: "friend_id", Type: field.TypeInt},
	}
	// ProfileFriendsTable holds the schema information for the "profile_friends" table.
	ProfileFriendsTable = &schema.Table{
		Name:       "profile_friends",
		Columns:    ProfileFriendsColumns,
		PrimaryKey: []*schema.Column{ProfileFriendsColumns[0], ProfileFriendsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "profile_friends_profile_id",
				Columns:    []*schema.Column{ProfileFriendsColumns[0]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "profile_friends_friend_id",
				Columns:    []*schema.Column{ProfileFriendsColumns[1]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EmailSubscriptionsTable,
		EmailSubscriptionTypesTable,
		EmojisTable,
		FcmSubscriptionsTable,
		FileStoragesTable,
		ImagesTable,
		ImageSizesTable,
		InvitationsTable,
		LastSeenOnlinesTable,
		MonthlySubscriptionsTable,
		NotificationsTable,
		NotificationPermissionsTable,
		NotificationTimesTable,
		PasswordTokensTable,
		PhoneVerificationCodesTable,
		ProfilesTable,
		PwaPushSubscriptionsTable,
		SentEmailsTable,
		UsersTable,
		EmailSubscriptionSubscriptionsTable,
		MonthlySubscriptionBenefactorsTable,
		ProfileFriendsTable,
	}
)

func init() {
	FcmSubscriptionsTable.ForeignKeys[0].RefTable = ProfilesTable
	ImagesTable.ForeignKeys[0].RefTable = ProfilesTable
	ImageSizesTable.ForeignKeys[0].RefTable = ImagesTable
	ImageSizesTable.ForeignKeys[1].RefTable = FileStoragesTable
	InvitationsTable.ForeignKeys[0].RefTable = ProfilesTable
	LastSeenOnlinesTable.ForeignKeys[0].RefTable = UsersTable
	MonthlySubscriptionsTable.ForeignKeys[0].RefTable = ProfilesTable
	NotificationsTable.ForeignKeys[0].RefTable = ProfilesTable
	NotificationPermissionsTable.ForeignKeys[0].RefTable = ProfilesTable
	NotificationTimesTable.ForeignKeys[0].RefTable = ProfilesTable
	PasswordTokensTable.ForeignKeys[0].RefTable = UsersTable
	PhoneVerificationCodesTable.ForeignKeys[0].RefTable = ProfilesTable
	ProfilesTable.ForeignKeys[0].RefTable = ImagesTable
	ProfilesTable.ForeignKeys[1].RefTable = UsersTable
	PwaPushSubscriptionsTable.ForeignKeys[0].RefTable = ProfilesTable
	SentEmailsTable.ForeignKeys[0].RefTable = ProfilesTable
	EmailSubscriptionSubscriptionsTable.ForeignKeys[0].RefTable = EmailSubscriptionsTable
	EmailSubscriptionSubscriptionsTable.ForeignKeys[1].RefTable = EmailSubscriptionTypesTable
	MonthlySubscriptionBenefactorsTable.ForeignKeys[0].RefTable = MonthlySubscriptionsTable
	MonthlySubscriptionBenefactorsTable.ForeignKeys[1].RefTable = ProfilesTable
	MonthlySubscriptionBenefactorsTable.Annotation = &entsql.Annotation{}
	ProfileFriendsTable.ForeignKeys[0].RefTable = ProfilesTable
	ProfileFriendsTable.ForeignKeys[1].RefTable = ProfilesTable
	ProfileFriendsTable.Annotation = &entsql.Annotation{}
}
