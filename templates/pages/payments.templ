package pages

import (
	"github.com/mikestefanello/pagoda/pkg/controller"
	"github.com/mikestefanello/pagoda/pkg/domain"
	"github.com/mikestefanello/pagoda/pkg/types"
	"github.com/mikestefanello/pagoda/templates/components"
)

templ PricingPage(page *controller.Page) {
	@components.PrevNavBarWithTitle(page.ToURL("preferences"), "", "üçª Subscription")
	if data, ok := page.Data.(types.PricingPageData); ok {
		@pricingCards(page, data.ProductProPrice, data.ProductProCode, &data.ActivePlan, data.IsTrial)
	}
}

templ pricingCards(page *controller.Page, productProPrice, productProCode string, activeProduct *domain.ProductType, isTrial bool) {
	<div class="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6">
		<div class="space-y-8 lg:grid lg:grid-cols-2 sm:gap-6 xl:gap-10 lg:space-y-0">
			@pricingCard(page, "Starter", "Forever free.", "0", []string{"Answer up to 1 question every 24h", "Save up to 3 questions for later"}, "", domain.ProductTypeFree, activeProduct, isTrial)
			@pricingCard(page, "Committed", "You like diving deep.", productProPrice, []string{"Unlimited everything"}, productProCode, domain.ProductTypePro, activeProduct, isTrial)
		</div>
	</div>
}

templ pricingCard(page *controller.Page, title, subtitle, price string, points []string, checkoutValue string, targetPlan domain.ProductType, activePlan *domain.ProductType, isTrial bool) {
	<!-- Pricing Card -->
	<div class="flex flex-col p-6 lg:max-w-sm text-center text-gray-900 bg-blue-100 rounded-lg border border-gray-100 shadow dark:border-gray-600 dark:bg-gray-800 dark:text-white lg:flex-grow">
		<h3 class="mb-4 text-2xl font-semibold lg:h-10">{ title }</h3>
		<p class="font-light text-gray-500 sm:text-lg dark:text-gray-400 lg:h-10">{ subtitle }</p>
		<div class="flex justify-center items-baseline my-8">
			<span class="mr-2 text-5xl font-extrabold">${ price }</span>
			<span class="text-gray-500 dark:text-gray-400">/month</span>
		</div>
		<!-- List -->
		<ul role="list" class="flex flex-col justify-center mb-8">
			for _, point := range points {
				<li class="flex items-center space-x-3">
					<!-- Icon -->
					<svg class="flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>
					<span>{ point }</span>
				</li>
			}
			if activePlan == nil && targetPlan == domain.ProductTypePro {
				<li class="flex items-center space-x-3">
					<!-- Icon -->
					<svg class="flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>
					<span>Free 15 day trial after registration</span>
				</li>
			}
		</ul>
		if activePlan != nil {
			if *activePlan == targetPlan {
				<div>
					<button
						disabled
						class="text-white bg-purple-400 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:text-white"
					>
						‚úÖ Currently on this plan
						if isTrial {
							<span>as part of our free 15 day trial</span>
						}
					</button>
				</div>
			} else {
				if *activePlan == domain.ProductTypeFree {
					<form
						action={ templ.SafeURL(page.ToURL("stripe.create_checkout_session")) }
						method="POST"
					>
						@components.FormCSRF(page.CSRF)
						<input
							type="hidden"
							name="price_id"
							value={ checkoutValue }
						/>
						<button
							id="checkout-button"
							type="submit"
							class="text-white bg-purple-600 hover:bg-primary-700 focus:ring-4 focus:ring-primary-200 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:text-white  dark:focus:ring-primary-900"
						>Get started</button>
					</form>
				} else {
					@components.ManageSubscriptionButton(page, *activePlan, isTrial)
				}
			}
		}
	</div>
}

templ PaymentSuccess(page *controller.Page) {
	<div
		class="text-xl md:text-2xl lg:text-3xl font-heavy flex flex-col justify-center items-center min-h-screen"
	>
		<div>{ "Success! ü§óüéâ" }</div>
		<div>{ "You can now continue using the platform ‚ú®" }</div>
		<div class="flex justify-center">
			<button
				hx-get={ page.ToURL("home_feed") }
				hx-target="#main-content"
				hx-select="#main-content"
				hx-indicator="next #page-loading"
				hx-swap="outerHTML show:window:top"
				hx-push-url="true"
				type="button"
				class="focus:outline-none text-white bg-purple-700 hover:bg-purple-800 
				focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 
				py-2.5 m-4 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900"
			>
				{ "Go to home feed" }
			</button>
		</div>
	</div>
}
