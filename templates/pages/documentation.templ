package pages

import (
	"fmt"
	"github.com/mikestefanello/pagoda/pkg/controller"
	"github.com/mikestefanello/pagoda/templates/components"
)

templ DocumentationLandingPage(page *controller.Page) {
	<div class="max-w-3xl mx-auto p-6 space-y-6">
		if page.Title != "" {
			<h1 class="text-3xl font-semibold">{ page.Title }</h1>
		}
		Build the same rich interfaces you would build with Javascript frameworks, but with HTML and Go. Limit the number of tools you use. Develop rapidly.
		@goshipFeatures()
		@techStack()
	</div>
}

templ techStack() {
	<h2 class="text-2xl font-semibold">Tech Stack</h2>
	@components.AccordionItem("Backend", true) {
		<ul>
			// Find icons in SVG at https://icon-sets.iconify.design/logos/postgresql/
			@listEntry(components.EchoLogo(), "high performance, extensible, minimalist Go web framework")
			@listEntry(components.EntOrmLogo(), "simple yet powerful ORM for modeling and querying data")
			@listEntry(components.AsynqLogo(), "simple, reliable & efficient distributed task queue in Go")
			@listEntry(components.StripeLogo(), "payments solution")
		</ul>
	}
	@components.AccordionItem("Frontend", true) {
		<ul>
			@listEntry(components.HtmxLogo(), "build modern user interfaces with minimal javascript")
			@listEntry(components.TemplLogo(), "a powerful type-safe Go templating language")
			@listEntry(components.TailwindLogo(), "a utility-first CSS framework for rapid implementation")
			@listEntry(components.AlpineLogo(), "a lightweight javascript framework to sprinkle localized logic and state")
		</ul>
	}
	@components.AccordionItem("Storage", true) {
		<ul>
			@listEntry(components.PostgresLogo(), "Postgres") {
				<ul class="ps-10 mt-2 space-y-1">
					@listEntry(components.SupabaseLogo(), "host your DB on Supabase on any other hosting platform compatible with Postgres")
				</ul>
			}
			@listEntry(components.S3Logo(), "host files and images on any S3 compatible service (e.g. Backblaze)")
			@listEntry(components.RedisLogo(), "for task queueuing, caching and sse events")
		</ul>
	}
}

templ goshipFeatures() {
	<h2 class="text-2xl font-semibold">Features</h2>
	@singleOpenAccordion() {
		@singleOpenAccordionEntry("RealTime", iconWithTitle(realtimeIcon(), "Realtime"), accordionRealtimeContent())
		@singleOpenAccordionEntry("Emails", iconWithTitle(emailIcon(), "Emails"), accordionEmailContent())
		@singleOpenAccordionEntry("Payments", iconWithTitle(creditCardIcon(), "Payments"), accordionPaymentContent())
		@singleOpenAccordionEntry("BackgroundTasks", iconWithTitle(stackIcon(), "Background Tasks"), accordionBackgroundTasksContent())
		@singleOpenAccordionEntry("Notifications", iconWithTitle(bellIcon(), "Notifications"), accordionNotificationsContent())
	}
}

templ iconWithTitle(icon templ.Component, title string) {
	<span class="flex flex-row items-center">
		@icon
		<span class="ml-2">{ title }</span>
	</span>
}

templ accordionRealtimeContent() {
	<ul class="space-y-1 list-disc list-inside ">
		<li>Support for HTMX SSE extension</li>
		<li>Can be used with vanilla JS</li>
	</ul>
}

templ accordionEmailContent() {
	<ul class="space-y-1 list-disc list-inside ">
		<li>Pre-made templates</li>
		<li>Support for SMTP and Resend API</li>
	</ul>
}

templ accordionPaymentContent() {
	<ul class="space-y-1 list-disc list-inside ">
		<li>Stripe support</li>
		<li>Subscription management</li>
	</ul>
}

templ accordionBackgroundTasksContent() {
	<ul class="space-y-1 list-disc list-inside ">
		<li>Offload heavy tasks to background</li>
		<li>Realtime or scheduled</li>
	</ul>
}

templ accordionNotificationsContent() {
	<ul class="space-y-1 list-disc list-inside ">
		<li>Real-time or scheduled</li>
		<li>Supports push notifications to PWA, native iOS and native Android</li>
	</ul>
}

templ singleOpenAccordionEntry(entryName string, title, content templ.Component) {
	<div class="divide-y divide-neutral-300 dark:divide-neutral-700">
		<button
			id={ fmt.Sprintf("controlsAccordionItem%s", entryName) }
			type="button"
			class="flex w-full items-center justify-between gap-4 bg-neutral-50 p-4 text-left underline-offset-2 hover:bg-neutral-50/75 focus-visible:bg-neutral-50/75 focus-visible:underline focus-visible:outline-none dark:bg-neutral-900 dark:hover:bg-neutral-900/75 dark:focus-visible:bg-neutral-900/75"
			aria-controls={ fmt.Sprintf("accordionItem%s", entryName) }
			@click={ fmt.Sprintf("selectedAccordionItem = '%s'", entryName) }
			:class={ fmt.Sprintf("selectedAccordionItem === '%s' ? 'text-onSurfaceStrong dark:text-onSurfaceDarkStrong font-bold'  : 'text-onSurface dark:text-onSurfaceDark font-medium'", entryName) }
			:aria-expanded={ fmt.Sprintf("selectedAccordionItem === '%s' ? 'true' : 'false'", entryName) }
		>
			@title
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke="currentColor" class="size-5 shrink-0 transition" aria-hidden="true" :class={ fmt.Sprintf("selectedAccordionItem === '%s'  ?  'rotate-180'  :  ''", entryName) }>
				<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
			</svg>
		</button>
		<div x-cloak x-show={ fmt.Sprintf("selectedAccordionItem === '%s'", entryName) } id={ fmt.Sprintf("accordionItem%s", entryName) } role="region" aria-labelledby={ fmt.Sprintf("controlsAccordionItem%s", entryName) } x-collapse>
			<div class="p-4 text-sm sm:text-base text-pretty">
				@content
			</div>
		</div>
	</div>
}

templ singleOpenAccordion() {
	<div x-data="{ selectedAccordionItem: 'one' }" class="w-full divide-y divide-neutral-300 overflow-hidden rounded-md border border-neutral-300 bg-neutral-50/40 text-neutral-600 dark:divide-neutral-700 dark:border-neutral-700 dark:bg-neutral-900/50 dark:text-neutral-300">
		{ children... }
	</div>
}

templ listEntry(icon templ.Component, sentence string) {
	<li class="my-4">
		<span class="flex flex-row items-center">
			@icon
			<span class="ml-1">- { sentence }</span>
		</span>
		{ children... }
	</li>
}

templ bellIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-bell"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6"></path><path d="M9 17v1a3 3 0 0 0 6 0v-1"></path></svg>
}

templ emailIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-at"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0"></path><path d="M16 12v1.5a2.5 2.5 0 0 0 5 0v-1.5a9 9 0 1 0 -5.5 8.28"></path></svg>
}

templ creditCardIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-credit-card"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M3 5m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z"></path><path d="M3 10l18 0"></path><path d="M7 15l.01 0"></path><path d="M11 15l2 0"></path></svg>
}

templ calendarEventIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-calendar-event"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M4 5m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z"></path><path d="M16 3l0 4"></path><path d="M8 3l0 4"></path><path d="M4 11l16 0"></path><path d="M8 15h2v2h-2z"></path></svg>
}

templ deviceGamepadIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-device-gamepad-2"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M12 5h3.5a5 5 0 0 1 0 10h-5.5l-4.015 4.227a2.3 2.3 0 0 1 -3.923 -2.035l1.634 -8.173a5 5 0 0 1 4.904 -4.019h3.4z"></path><path d="M14 15l4.07 4.284a2.3 2.3 0 0 0 3.925 -2.023l-1.6 -8.232"></path><path d="M8 9v2"></path><path d="M7 10h2"></path><path d="M14 10h2"></path></svg>
}

templ lockIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-lock"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z"></path><path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0"></path><path d="M8 11v-4a4 4 0 1 1 8 0v4"></path></svg>
}

templ realtimeIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-hours-24"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M4 13c.325 2.532 1.881 4.781 4 6"></path><path d="M20 11a8.1 8.1 0 0 0 -15.5 -2"></path><path d="M4 5v4h4"></path><path d="M12 15h2a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-1a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h2"></path><path d="M18 15v2a1 1 0 0 0 1 1h1"></path><path d="M21 15v6"></path></svg>
}

templ calendarIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-calendar-event"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M4 5m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z"></path><path d="M16 3l0 4"></path><path d="M8 3l0 4"></path><path d="M4 11l16 0"></path><path d="M8 15h2v2h-2z"></path></svg>
}

templ stackIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-stack-3"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M12 2l-8 4l8 4l8 -4l-8 -4"></path><path d="M4 10l8 4l8 -4"></path><path d="M4 18l8 4l8 -4"></path><path d="M4 14l8 4l8 -4"></path></svg>
}



