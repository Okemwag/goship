package pages

import (
	"github.com/mikestefanello/pagoda/pkg/controller"
	"github.com/mikestefanello/pagoda/pkg/routing/routenames"
	"github.com/mikestefanello/pagoda/pkg/types"
	"github.com/mikestefanello/pagoda/templates/components"
)

templ Register(page *controller.Page) {
	if form, ok := page.Form.(*types.RegisterForm); ok {
		if data, ok := page.Data.(types.RegisterData);ok {
			<form
				method="post"
				action={ templ.URL(page.ToURL(routenames.RouteNameRegisterSubmit)) }
				class="space-y-4"
			>
				<div class="flex flex-col space-y-2 m-5">
					@components.FormFieldErrors(form.Submission.GetFieldErrors("RelationshipStatus"))
				</div>
				<!-- Name/Username -->
				<div class="flex flex-col space-y-2 m-5">
					<label
						for="name"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
					>Display Name</label>
					<div>
						<input
							type="text"
							id="name"
							name="name"
							placeholder="JohnWatts123"
							class={ "bg-gray-50 border border-gray-300 text-gray-900 text-sm md:text-base rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full md:ps-5 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500", form.Submission.GetFieldStatusClass("Name") }
							value={ form.Name }
						/>
						@components.FormFieldErrors(form.Submission.GetFieldErrors("Name"))
					</div>
				</div>
				<!-- Email -->
				<div class="flex flex-col space-y-2 m-5">
					<label
						for="email"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
					>Email address</label>
					<div>
						<input
							id="email"
							type="email"
							name="email"
							placeholder="steamyjohn@diesel.com"
							class={ "bg-gray-50 border border-gray-300 text-gray-900 text-sm md:text-base rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full md:ps-5 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500", form.Submission.GetFieldStatusClass("Email") }
							value={ form.Email }
						/>
						@components.FormFieldErrors(form.Submission.GetFieldErrors("Email"))
					</div>
				</div>
				<!-- Password -->
				<div x-data="{ showPassword: false }" class="flex flex-col space-y-2 m-5">
					<label for="password" class="label">Password</label>
					<div class="relative">
						<input
							:type="showPassword ? 'text' : 'password'"
							id="password"
							name="password"
							placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm md:text-base rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full md:ps-5 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
							:class="{ 'form.Submission.GetFieldStatusClass('Password')': true }"
							value={ form.Password }
						/>
						<div class="absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5">
							<button @click="showPassword = !showPassword" type="button" class="text-gray-500">
								<svg x-show="!showPassword" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
								</svg>
								<svg x-show="showPassword" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="display:none;">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"></path>
								</svg>
							</button>
						</div>
					</div>
					<!-- Render any form field errors here -->
					@components.FormFieldErrors(form.Submission.GetFieldErrors("Password"))
				</div>
				<!-- Birthdate -->
				<div class="flex flex-col space-y-2 m-5">
					<label
						for="birthdate"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
					>{ "Birthdate (you need to be 18+ üç≠üê•)" }</label>
					<div class="relative">
						<div class="absolute inset-y-0 start-0 flex items-center ps-3.5 pointer-events-none">
							<svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
								<path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"></path>
							</svg>
						</div>
						<input
							id="birthdate"
							type="date"
							max={ data.MinDate }
							name="birthdate"
							value={ form.Birthdate }
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm md:text-base rounded-lg 
					focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5 
					dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white 
					dark:focus:ring-blue-500 dark:focus:border-blue-500"
						/>
					</div>
					@components.FormFieldErrors(form.Submission.GetFieldErrors("Birthdate"))
				</div>
				<div class="flex justify-center items-center pt-5">
					<div class="flex items-center">
						<button
							type="submit"
							class="px-4 py-2 bg-blue-500 hover:bg-blue-700 text-white rounded-full mr-2"
						>Register</button>
					</div>
					<div class="flex items-center">
						<a
							href={ templ.URL(page.ToURL(routenames.RouteNameLandingPage)) }
							class="text-xs px-4 py-2 bg-slate-300 hover:bg-slate-400 text-black rounded-full"
						>Cancel</a>
					</div>
				</div>
				@components.AuthButtons(page, true, false, true)
				@components.FormCSRF(page.CSRF)
			</form>
		}
	}
}
