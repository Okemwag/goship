package components

import "github.com/mikestefanello/pagoda/pkg/controller"

templ BottomNav(page *controller.Page) {
	<div
		id="bottom-navbar"
		navbar-state-data={ templ.JSONString(page.ShowBottomNavbar) }
		if page.IsAuth && page.IsFullyOnboarded {
			hx-ext="sse"
			sse-connect={ page.ToURL("realtime") }
		}
		class="fixed bottom-0 left-0 z-50 w-full h-16 bg-white border-t border-gray-200 dark:bg-gray-950 dark:border-gray-600"
		style="padding-bottom: env(safe-area-inset-bottom);"
	>
		<div
			class={
				"grid h-full max-w-lg mx-auto font-medium grid-cols-4",
				// templ.KV("grid-cols-3", page.ExperienceType == domain.ExperienceTypeCommittedRelationship),
				// templ.KV("grid-cols-4", page.ExperienceType == domain.ExperienceTypeDating),
			}
			hx-target="#main-content"
			hx-select="#main-content"
			hx-indicator="next #page-loading"
			hx-swap="outerHTML show:window:top"
			hx-push-url="true"
			x-cloak
			x-data="{ selected: null }"
			if page.SelectedBottomNavbarItem.Value == "meet" {
				x-data="{ selected: 'meet' }"
			}
			if page.SelectedBottomNavbarItem.Value == "home" {
				x-data="{ selected: 'home' }"
			}
			if page.SelectedBottomNavbarItem.Value == "notifications" {
				x-data="{ selected: 'notifications' }"
			}
			if page.SelectedBottomNavbarItem.Value == "settings" {
				x-data="{ selected: 'settings' }"
			}
			if page.SelectedBottomNavbarItem.Value == "profile" {
				x-data="{ selected: 'profile' }"
			}
		>
			// if page.ExperienceType == domain.ExperienceTypeDating {
			// 	// Meet button
			// 	<button
			// 		hx-get={ page.ToURL("meet.get_match") }
			// 		type="button"
			// 		class="inline-flex flex-col items-center justify-center px-5 hover:bg-gray-100 dark:hover:bg-gray-800 group rounded-xl m-2"
			// 		@click="selected = 'meet';"
			// 	>
			// 		<svg
			// 			xmlns="http://www.w3.org/2000/svg"
			// 			viewBox="0 0 20 20"
			// 			fill="currentColor"
			// 			class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
			// 			:class="{'text-blue-500 dark:text-blue-400': selected === 'meet', 'text-gray-500 dark:text-gray-400': selected !== 'meet'}"
			// 		>
			// 			<path fill-rule="evenodd" d="M13.5 4.938a7 7 0 1 1-9.006 1.737c.202-.257.59-.218.793.039.278.352.594.672.943.954.332.269.786-.049.773-.476a5.977 5.977 0 0 1 .572-2.759 6.026 6.026 0 0 1 2.486-2.665c.247-.14.55-.016.677.238A6.967 6.967 0 0 0 13.5 4.938ZM14 12a4 4 0 0 1-4 4c-1.913 0-3.52-1.398-3.91-3.182-.093-.429.44-.643.814-.413a4.043 4.043 0 0 0 1.601.564c.303.038.531-.24.51-.544a5.975 5.975 0 0 1 1.315-4.192.447.447 0 0 1 .431-.16A4.001 4.001 0 0 1 14 12Z" clip-rule="evenodd"></path>
			// 		</svg>
			// 	</button>
			// }
			// Home button
			<button
				id="bottom-navbar-homefeed-button"
				hx-get={ page.ToURL("home_feed") }
				hx-target="#bottomNavbarContent"
				hx-select="#bottomNavbarContent"
				hx-on="htmx:afterRequest:handleCacheUpdate"
				type="button"
				class="inline-flex flex-col items-center justify-center px-5 hover:bg-gray-100 dark:hover:bg-gray-800 group rounded-xl m-2"
				@click="selected = 'home';"
			>
				// <div class="relative">
				// 	<img
				// 		src="/files/favicon.png"
				// 		class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
				// 		:class="{'hidden': selected === 'home', 'block grayscale dark:grayscale-50': selected !== 'home'}"
				// 		alt="Logo"
				// 	/>
				// 	<img
				// 		src="/files/favicon.png"
				// 		class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
				// 		:class="{'block text-blue-500 dark:text-blue-400': selected === 'home', 'hidden': selected !== 'home'}"
				// 		alt="Logo"
				// 	/>
				// </div>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					stroke="currentColor"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"
					class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
					:class="{'hidden': selected === 'home', 'block text-gray-500 dark:text-gray-400': selected !== 'home'}"
				><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M5 12l-2 0l9 -9l9 9l-2 0"></path><path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7"></path><path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6"></path></svg>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					viewBox="0 0 20 20"
					fill="currentColor"
					class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
					:class="{'block text-blue-500 dark:text-blue-400': selected === 'home', 'hidden': selected !== 'home'}"
				>
					<path fill-rule="evenodd" d="M9.293 2.293a1 1 0 0 1 1.414 0l7 7A1 1 0 0 1 17 11h-1v6a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6H3a1 1 0 0 1-.707-1.707l7-7Z" clip-rule="evenodd"></path>
				</svg>
			</button>
			// Notifications button
			<button
				id="bottom-navbar-notifications-button"
				hx-get={ page.ToURL("normalNotifications") }
				hx-target="#bottomNavbarContent"
				hx-select="#bottomNavbarContent"
				type="button"
				class="inline-flex flex-col items-center justify-center px-5 hover:bg-gray-100 dark:hover:bg-gray-800 group rounded-xl m-2"
				@click="selected = 'notifications';"
			>
				<div class="relative">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						width="24"
						height="24"
						viewBox="0 0 24 24"
						fill="none"
						stroke="currentColor"
						stroke-width="2"
						stroke-linecap="round"
						stroke-linejoin="round"
						class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
						:class="{'hidden': selected === 'notifications', 'block text-gray-500 dark:text-gray-400': selected !== 'notifications'}"
					><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6"></path><path d="M9 17v1a3 3 0 0 0 6 0v-1"></path></svg>
					<svg
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 20 20"
						fill="currentColor"
						class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
						:class="{'block text-blue-500 dark:text-blue-400': selected === 'notifications', 'hidden': selected !== 'notifications'}"
					>
						<path fill-rule="evenodd" d="M10 2a6 6 0 0 0-6 6c0 1.887-.454 3.665-1.257 5.234a.75.75 0 0 0 .515 1.076 32.91 32.91 0 0 0 3.256.508 3.5 3.5 0 0 0 6.972 0 32.903 32.903 0 0 0 3.256-.508.75.75 0 0 0 .515-1.076A11.448 11.448 0 0 1 16 8a6 6 0 0 0-6-6ZM8.05 14.943a33.54 33.54 0 0 0 3.9 0 2 2 0 0 1-3.9 0Z" clip-rule="evenodd"></path>
					</svg>
					<span hx-disinherit="*">
						<span
							hx-get={ page.ToURL("normalNotificationsCount") }
							if page.IsFullyOnboarded {
								hx-trigger="sse:update_num_notifs,load"
							}
							hx-swap="innerHTML"
							hx-target="this"
							hx-select="span"
							hx-push-url="false"
							id="normal-notifications-count-bottom-navbar"
							class="absolute inline-flex items-center justify-center px-2 ms-3 text-sm font-medium rounded-full bg-red-600 text-white -top-2 -end-3"
						></span>
					</span>
				</div>
			</button>
			// Settings button
			<button
				id="bottom-navbar-settings-button"
				hx-get={ page.ToURL("preferences") }
				hx-target="#bottomNavbarContent"
				hx-select="#bottomNavbarContent"
				hx-on="htmx:afterRequest:handleCacheUpdate"
				type="button"
				class="inline-flex flex-col items-center justify-center px-5 hover:bg-gray-100 dark:hover:bg-gray-800 group rounded-xl m-2"
				@click="selected = 'settings';"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					stroke="currentColor"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"
					class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
					:class="{'hidden': selected === 'settings', 'block text-gray-500 dark:text-gray-400': selected !== 'settings'}"
				><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z"></path><path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0"></path></svg>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="currentColor"
					class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
					:class="{'block text-blue-500 dark:text-blue-400': selected === 'settings', 'hidden': selected !== 'settings'}"
				><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14.647 4.081a.724 .724 0 0 0 1.08 .448c2.439 -1.485 5.23 1.305 3.745 3.744a.724 .724 0 0 0 .447 1.08c2.775 .673 2.775 4.62 0 5.294a.724 .724 0 0 0 -.448 1.08c1.485 2.439 -1.305 5.23 -3.744 3.745a.724 .724 0 0 0 -1.08 .447c-.673 2.775 -4.62 2.775 -5.294 0a.724 .724 0 0 0 -1.08 -.448c-2.439 1.485 -5.23 -1.305 -3.745 -3.744a.724 .724 0 0 0 -.447 -1.08c-2.775 -.673 -2.775 -4.62 0 -5.294a.724 .724 0 0 0 .448 -1.08c-1.485 -2.439 1.305 -5.23 3.744 -3.745a.722 .722 0 0 0 1.08 -.447c.673 -2.775 4.62 -2.775 5.294 0zm-2.647 4.919a3 3 0 1 0 0 6a3 3 0 0 0 0 -6z"></path></svg>
			</button>
			// Profile button
			<button
				id="bottom-navbar-profile-button"
				hx-get={ page.ToURL("profile") }
				hx-target="#bottomNavbarContent"
				hx-select="#bottomNavbarContent"
				hx-on="htmx:afterRequest:handleCacheUpdate"
				type="button"
				class="inline-flex flex-col items-center justify-center px-5 hover:bg-gray-100 dark:hover:bg-gray-800 group rounded-xl m-2"
				@click="selected = 'profile';"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					stroke="currentColor"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"
					class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
					:class="{'hidden': selected === 'profile', 'block text-gray-500 dark:text-gray-400': selected !== 'profile'}"
				><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"></path><path d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"></path></svg>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="currentColor"
					class="w-7 h-7 group-hover:text-blue-600 dark:group-hover:text-blue-500"
					:class="{'block text-blue-500 dark:text-blue-400': selected === 'profile', 'hidden': selected !== 'profile'}"
				><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M12 2a5 5 0 1 1 -5 5l.005 -.217a5 5 0 0 1 4.995 -4.783z"></path><path d="M14 14a5 5 0 0 1 5 5v1a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-1a5 5 0 0 1 5 -5h4z"></path></svg>
			</button>
		</div>
	</div>
}
